:root{
    --cell-size: 40px;
    --option-btn-size: 45px;
    --top-margin-right: 75px;
}
#gsBackground{
    display: none;
    position: absolute;
    top: 0;
    left: 0;
    width: 150%; /* Double the width to cover the entire container during animation */
    height: 100%;
    background: url("./assets/menu/pot.jpg");
    animation: slideBackground 100s linear infinite; /* Adjust timing as needed */
    z-index: -1;
    background-size: contain;
    background-repeat: repeat;  
}
#gameScreen{
    position: relative;
    overflow: hidden; 
    display: none;
    grid-auto-flow: column;
    grid-template-columns: 1fr, auto;
    grid-template-rows: 2fr 9fr;
    grid-template-areas: 
            "top top"
            "left right";

    width: 100vw;
    height: 100vh;
}
@keyframes slideBackground {
    0% {
      transform: translateX(0%); /* Start from the left edge */
    }
    50% {
      transform: translateX(-25%); /* Pause midway, move to the right edge */
    }
}

#rotate.vertical{
    /* background-image: url("./assets/svgs/vertical.svg"); */
    transform: scaleX(-1) rotate(-90deg);
}
#rotate.horizontal{
    /* background-image: url("./assets/svgs/horizontal.svg"); */
    transform: rotate(0deg);
}

#gsTop{
    grid-area: top;
    grid-column: span 2;
    display: flex;
    border-bottom: 4px solid black;
    justify-content: center;
    align-items: center;
    /* gap:10px */
}
#options{
    display: flex;
    flex-direction: column;
    gap: 20px;
}
body .optionBtn{
    width: 45px;
    height: 45px;
    background-color: inherit;
    border: none;
    margin-right: var(--top-margin-right);
    opacity: 0.6;
    cursor: default;
}
body .optionBtn.clickable{
    opacity: 1;
    cursor: pointer;
}
#rotate{
    background-image: url("./assets/svgs/horizontal.svg");
    transition: transform 0.5s ease;
}
#cancel{
    background-image: url("./assets/svgs/close.svg");
}

#topBoardContainer{
    margin-right: calc(var(--top-margin-right) + var(--option-btn-size))
}
#topGrid{
    display: grid;
    grid-template-columns: repeat(20, var(--cell-size));
    grid-template-rows: repeat(3, var(--cell-size));
    border: 2px solid black
}
#gsLeft{
    grid-area: left;
}
#gsRight{
    grid-area: right;
    border-left: 3px solid black;
    background-color: rgba(0,0,0,0.2);
}
#opponentImage{
    z-index: -1;
}
#gsLeft, #gsRight{
    display: flex;
    flex-direction: column;
    padding-top: 30px;
    align-items: center;
}
#leftTop, #rightTop{
    display: flex;
}
#leftBottom{
    display: flex;
    min-width: calc(10*var(--cell-size));
    justify-content: space-around;
    padding-top: 30px;
}
#leftGrid, #rightGrid{
    display: grid;
    grid-template-columns: repeat(10, var(--cell-size));
    grid-template-rows: repeat(10, var(--cell-size));
    border: 2px solid black
}
#playerImage, #opponentImage{
    width: 200px;
    height: 210px;
}
.gridCell{
    background-color: rgba(0,0,0,0.1);
    display: flex;
    justify-content: center;
    align-items: center;
    border: 1px dashed black;
    z-index: 1;
}

#readyGame, #resetBoard{
    min-width: 120px; /* Set a minimum width for the button */
    max-width: max-content; /* Set maximum width based on content */
    min-height: 30px; /* Set a minimum height for the button */
    max-height: 60px; /* Set a maximum height for the button */
    color: grey;
    background-color: white;
    cursor: default;
}
#resetBoard.active{
    background-color: rgba(255, 0, 0, 0.6);
    color: white;
    cursor: pointer;
}
#resetBoard.active:hover{
    background-color: red;
}

#topBoardContainer, #leftBoardContainer{
    position: relative;
}
.topCells{
    pointer-events: none;
}
.topShips, .leftShips{
    position: absolute;
    z-index: 0;
}
.leftShips{
    display: none;
}

.carrier{
    height: calc(2*var(--cell-size));
    width: calc((5*var(--cell-size)));
}
.battleship{
    height: calc(2*var(--cell-size));
    width: calc((4*var(--cell-size)));
}
.cruiser{
    height: calc(1*var(--cell-size));
    width: calc((3*var(--cell-size)));
}
.submarine{
    height: calc(var(--cell-size));
    width: calc((3*var(--cell-size)));
}
.destroyer{
    height: calc(var(--cell-size));
    width: calc((2*var(--cell-size)));
}

#top-carrier{
    top: 1px;
    left: calc(14*var(--cell-size));
}
#top-battleship {
    top: 1px;
    left: calc(6 * var(--cell-size) + 1px);
}
#top-cruiser{
    top:  calc(2 * var(--cell-size) + 1px);
    left: calc(10 * var(--cell-size) + 1px);
}
#top-submarine {
    top: 1px;
    left: calc(1* var(--cell-size) + 1px);
}
#top-destroyer{
    top: calc(2* var(--cell-size) + 1px);
    left: calc(1* var(--cell-size) + 1px);
}
.cellHover, .validPlacement{
    background-color: rgba(14, 210, 90, 0.15);
    cursor: pointer;
}
.cellSelected{
    background-color: rgba(0,0,0,0.35);
}
.invalidPlacement{
    background-color: rgba(255, 0, 0, 0.15);
}

.shipHover{
    cursor: pointer;
}
.shipUnavailable{
    opacity: 0.65;
}


@media screen and (max-width: 1500px) {
    :root{
        --cell-size: 25px
    }
    #playerImage, #opponentImage{
        width: 130px;
        height: 135px;
    }
}